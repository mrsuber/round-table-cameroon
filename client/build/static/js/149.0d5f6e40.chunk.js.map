{"version":3,"file":"static/js/149.0d5f6e40.chunk.js","mappings":"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","sources":["pages/admin/add-project/AddProject.page.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  AddDottedIcon,\n  AddPersonIcon,\n  AddPersonOutlinedIcon,\n  AttachFileIcon,\n  AttachmentIcon,\n  CloseIcon,\n  MoreVerticalIcon,\n  UnCheckedIcon,\n  CheckedIcon,\n} from '../../../assets/svg';\nimport Input from '../../../components/admin/input/Input.component';\nimport AdminLayout from '../../../layouts/Admin.layout';\nimport { projectTypes } from '../../../assets/data/projectTypes';\nimport Avatar from '../../../components/admin/avatar/Avatar.component';\nimport TextArea from '../../../components/admin/input/TextArea.component';\nimport Button from '../../../components/admin/button/Button.component';\nimport AttachmentsPreview from '../../../components/admin/attchments-preview/AttachmentsPreview.component';\n// import { attachments as attachmentData } from '../../../assets/data/attachments';\nimport AddDropdown from '../../../components/admin/add-dropdown/AddDropdown.component';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { getMembersAction } from '../../../store/features/slices/members/members.action';\nimport classes from './AddProject.module.css';\nimport { removeArrItem } from '../../../utils/removeArrItem';\nimport placeholder from '../../../assets/images/p-placeholder.jpg';\nimport { addProjectAction } from '../../../store/features/slices/projects/projects.action';\nimport { toast } from 'react-toastify';\nimport { stopLoading } from '../../../store/features/slices/loader/loader.slice';\nimport { useNavigate } from 'react-router-dom';\nimport { paths } from '../../../routers/paths';\n\nconst AddProject = () => {\n  const { members } = useAppSelector((state) => state.members);\n  const { user } = useAppSelector((state) => state.auth);\n  const { projectError: error, successMessage } = useAppSelector((state) => state.projects);\n  const { loading } = useAppSelector((state) => state.loader);\n  const dispatch = useAppDispatch();\n\n  const effectRef = useRef(true);\n\n  const [title, setTitle] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [projectImage, setProjectImage] = useState<any>();\n  const [date, setDate] = useState<string>('');\n  const [projectManager, setProjectManager] = useState<any>([]);\n  const [projectMemberIds, setProjectMemberIds] = useState<any>([]);\n  const [projectManagerIds, setProjectManagerIds] = useState<any>([]);\n  const [projectMembers, setProjectMembers] = useState<any>([]);\n  const [assigneeIds, setAssigneeIds] = useState<any[]>(projectMemberIds);\n  const [projectLabel, setProjectLabel] = useState<any>([]);\n  const [tasks, setTasks] = useState<any>([]);\n  const [taskName, setTaskName] = useState<string>('');\n  const [taskDate, setTaskDate] = useState<string>('');\n  const [attachments, setAttachments] = useState<any>([]);\n  const [publicProject, setPublicProject] = useState<boolean>(false);\n  const [focusTitle, setFocusTitle] = useState(false);\n  const [focusTaskName, setFocusTaskName] = useState(false);\n  const [ongoing, setOngoing] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (effectRef.current) {\n      effectRef.current = false;\n      dispatch(getMembersAction({ pageNumber: 0, limit: 1000 }));\n    }\n  }, []);\n\n  const projectInfo = {\n    title,\n    publicProject,\n    date,\n    ongoing,\n  };\n\n  const [errorText, setErrorText] = useState<string>('');\n  const [assignees, setAssignees] = useState<any[]>(projectMembers);\n  const [memberHeader, setMemberHeader] = useState<string>('Add Member');\n  const [assigneeHeader, setAssigneeHeader] = useState<string>('Add Assignees');\n  const [selectedLabel, setSelectedLabel] = useState<any>();\n  const [taskDescription, setTaskDescription] = useState<string>();\n  const [coverPreview, setCoverPreview] = useState<any>();\n  const memberHeaderRef = useRef<any>();\n\n  const handleAddProject = () => {\n    const formData = new FormData();\n    formData.append('projectInfo', JSON.stringify(projectInfo));\n    formData.append('projectImage', projectImage);\n    for (let i = 0; i < projectManagerIds.length; i++) {\n      formData.append('projectManager', projectManagerIds[i]);\n    }\n    for (let i = 0; i < projectMemberIds.length; i++) {\n      formData.append('projectMembers', projectMemberIds[i]);\n    }\n    for (let i = 0; i < projectLabel.length; i++) {\n      formData.append('labels', projectLabel[i]);\n    }\n    formData.append('description', description);\n    for (let i = 0; i < attachments.length; i++) {\n      formData.append('attachments', attachments[i]);\n    }\n    for (let i = 0; i < tasks.length; i++) {\n      formData.append('tasks', JSON.stringify(tasks[i]));\n    }\n    const data = {\n      formData,\n      token: user?.accessToken,\n    };\n    dispatch(addProjectAction(data)).then((res: any) => {\n      const { payload } = res;\n      if (error) {\n        toast.error(error?.error?.message);\n        dispatch(stopLoading());\n        return;\n      } else if (payload?.status === 500 || payload?.status === 400) {\n        toast.error(payload?.message);\n        dispatch(stopLoading());\n        return;\n      } else {\n        toast.success(successMessage);\n        clearAllData();\n        navigate(paths.ADMIN.PROJECTS);\n      }\n    });\n  };\n\n  const clearAllData = () => {\n    setTitle('');\n    setDescription('');\n    setProjectImage('');\n    setDate('');\n    setProjectManager([]);\n    setProjectMemberIds([]);\n    setProjectMembers([]);\n    setAssigneeIds([]);\n    setProjectLabel([]);\n    setTasks([]);\n    setAttachments([]);\n    setPublicProject(false);\n    setAssignees([]);\n    setMemberHeader('Add Member');\n    setAssigneeHeader('Add Assignees');\n    setSelectedLabel(null);\n    setTaskDescription('');\n    setCoverPreview('');\n  };\n\n  const handleMembersSelect = (item: any) => {\n    setErrorText('');\n    if (projectMembers.includes(item) || projectMemberIds.includes(item._id)) {\n      return;\n    }\n    setProjectMemberIds((prev: any) => [...prev, item._id]);\n    setProjectMembers((prev: any) => [...prev, item]);\n    setMemberHeader('Add Member');\n  };\n\n  const handleAssigneeHeader = () => {\n    if (projectMembers.length === 0) {\n      setErrorText('Select at least one member');\n      memberHeaderRef.current.focus();\n      return;\n    }\n  };\n  const handleAssigneeSelect = (item: any) => {\n    if (assignees.includes(item) || assigneeIds.includes(item._id)) {\n      return;\n    }\n    setAssignees((prev: any) => [...prev, item]);\n    setAssigneeIds((prev: any) => [...prev, item._id]);\n    setAssigneeHeader('Add Assignees');\n  };\n  const handleManagerSelect = (item: any) => {\n    setProjectManagerIds((prev: any) => [...prev, item._id]);\n    setProjectManager((prev: any) => [...prev, item]);\n  };\n\n  const handleRemoveMember = (item: any) => {\n    const removedMember = removeArrItem(projectMembers, item);\n    setProjectMembers(removedMember);\n    const removedMemberId = removeArrItem(projectMemberIds, item._id);\n    setProjectMemberIds(removedMemberId);\n  };\n  const handleRemoveManager = (item: any) => {\n    const removedMember = removeArrItem(projectManager, item);\n    setProjectManager(removedMember);\n    const removedMemberId = removeArrItem(projectManagerIds, item._id);\n    setProjectManagerIds(removedMemberId);\n  };\n  const handleRemoveTask = (item: any) => {\n    const removedMember = removeArrItem(tasks, item);\n    setTasks(removedMember);\n  };\n\n  const handleRemoveAssignee = (item: any) => {\n    const removedMember = removeArrItem(assignees, item);\n    setAssignees(removedMember);\n    const removedMemberId = removeArrItem(assigneeIds, item._id);\n    setAssigneeIds(removedMemberId);\n  };\n\n  const handleDeleteAttachment = (item: any) => {\n    const removedAttachment = removeArrItem(attachments, item);\n    setAttachments(removedAttachment);\n  };\n  const handleDeleteCover = (item: any) => {\n    setCoverPreview(null);\n    setProjectImage(null);\n  };\n\n  const handleLabelSelect = (item: any) => {\n    const labelsCopy = [...projectLabel];\n    if (projectLabel.includes(item.type)) {\n      const index = labelsCopy.indexOf(item);\n      labelsCopy.splice(index, 1);\n      setProjectLabel(labelsCopy);\n      setSelectedLabel(null);\n    } else {\n      setSelectedLabel(item.id);\n      setProjectLabel((prev: any) => [...prev, item.type]);\n    }\n  };\n\n  const handleCreateTask = () => {\n    setTasks((prev: any) => [\n      ...prev,\n      { name: taskName, date: taskDate, description: taskDescription, assignees: assigneeIds },\n    ]);\n    setTaskDescription('');\n    setAssignees([]);\n    setAssigneeIds([]);\n    setTaskName('');\n  };\n\n  const handleCoverChange = (e: any) => {\n    if (e.target.files) {\n      const preview = URL.createObjectURL(e.target.files[0]);\n      setCoverPreview(preview);\n      setProjectImage(e.target.files[0]);\n    }\n  };\n\n  const handleFileChange = (file: any) => {\n    if (attachments.includes(file)) return;\n    setAttachments((prev: any) => [...prev, file]);\n  };\n  const handleDropChange = useCallback(\n    () => (file: any) => {\n      if (attachments.find((item: any) => item.name === file.name)) return;\n      setAttachments((prev: any) => [...prev, file]);\n    },\n    [attachments],\n  );\n\n  const handleDownload = (fileName: any) => {\n    const link = document.createElement('a');\n    link.download = fileName;\n\n    // 👇️ set to relative path\n    link.href = '/downloaded-files.pdf';\n\n    link.click();\n  };\n\n  return (\n    <AdminLayout>\n      <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <Button\n          text='Add Project'\n          style={{ alignSelf: 'right', marginBottom: '25px' }}\n          width='12%'\n          onClick={handleAddProject}\n          loading={loading}\n          spinnerSize='13px'\n          disabled={false}\n        />\n      </div>\n      <div className={classes.container}>\n        <div className={classes.column}>\n          <div className={classes.content} style={{ padding: '8px 14px' }}>\n            <Input\n              placeholder='Project Title'\n              onChange={(e) => setTitle(e.target.value)}\n              value={title}\n              border={focusTitle ? '0.8px solid rgba(0, 101, 87, 0.5)' : 'none'}\n              onFocus={() => setFocusTitle(true)}\n              onBlur={() => setFocusTitle(false)}\n            />\n            <TextArea\n              placeholder='Description...'\n              style={{ marginBottom: '14px', boxShadow: 'none' }}\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              width='100%'\n            />\n            <div className={classes.coverPreview}>\n              <AttachFileIcon size='16px' color='#868686' style={{ margin: '6px 10px' }} />\n              <input\n                id='cover'\n                onChange={handleCoverChange}\n                type='file'\n                className={classes.fileInput}\n              />\n              <label htmlFor='cover' className={classes.projectImage}>\n                <img\n                  src={coverPreview ?? placeholder}\n                  alt='project-image'\n                />\n              </label>\n            </div>\n            <div className={classes.type}>\n              <div style={{ marginRight: '14px' }} className={classes.managerText}>\n                Public Project :\n              </div>{' '}\n              <div\n                style={{ display: 'flex', alignItems: 'center' }}\n                onClick={() => setPublicProject(!publicProject)}\n              >\n                <span className={classes.managerText}>Yes</span>\n                {publicProject ? (\n                  <CheckedIcon size='10' style={{ marginLeft: '10px' }} />\n                ) : (\n                  <UnCheckedIcon\n                    size='11'\n                    style={{ marginLeft: '10px' }}\n                    color=''\n                    borderColor='#B0E4DD'\n                  />\n                )}\n              </div>\n            </div>\n            <div className={classes.type} style={{ margin: '16px 0' }}>\n              <div style={{ marginRight: '14px' }} className={classes.managerText}>\n                Ongoing Project :\n              </div>{' '}\n              <div\n                style={{ display: 'flex', alignItems: 'center' }}\n                onClick={() => setOngoing(!ongoing)}\n              >\n                <span className={classes.managerText}>Yes</span>\n                {ongoing ? (\n                  <CheckedIcon size='10' style={{ marginLeft: '10px' }} />\n                ) : (\n                  <UnCheckedIcon\n                    size='11'\n                    style={{ marginLeft: '10px' }}\n                    color=''\n                    borderColor='#B0E4DD'\n                  />\n                )}\n              </div>\n            </div>\n            <div className={classes.type}>\n              <span style={{ marginRight: '3px' }} className={classes.managerText}>\n                Due Date:\n              </span>\n              <Input\n                border=''\n                style={{ cursor: 'pointer' }}\n                type='date'\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n              />\n            </div>\n          </div>\n          <div className={classes.content}>\n            <h3 className={classes.membersText}>Project Manager(s)</h3>\n            <div className={classes.selectedMembers}>\n              {projectManager?.map((mem: any) => (\n                <div\n                  key={mem._id}\n                  className={classes.ownerMini}\n                  style={{ margin: '10px 10px 0px 0' }}\n                >\n                  <Avatar size='18px' src={mem.profileImage} />\n                  <span\n                    style={{ margin: '0 10px', fontSize: '11px' }}\n                  >{`${mem.firstName} ${mem.lastName}`}</span>\n                  <CloseIcon size='8' onClick={() => handleRemoveManager(mem)} />\n                </div>\n              ))}\n            </div>\n            <AddDropdown\n              text='Add Project Manager'\n              renderIconLeft={() => <AddPersonIcon />}\n              renderIconRight={() => <AddDottedIcon />}\n              options={members?.data}\n              id='firstName'\n              id2='lastName'\n              headerStyle={{ padding: '14px' }}\n              handleOption={(item) => handleManagerSelect(item)}\n            />\n          </div>\n          <div className={classes.content}>\n            <h3 className={classes.membersText}>Project Members</h3>\n            <div className={classes.selectedMembers}>\n              {projectMembers?.map((mem: any) => (\n                <div\n                  key={mem._id}\n                  className={classes.ownerMini}\n                  style={{ margin: '10px 10px 0px 0' }}\n                >\n                  <Avatar size='18px' src={mem.profileImage} />\n                  <span\n                    style={{ margin: '0 10px', fontSize: '11px' }}\n                  >{`${mem.firstName} ${mem.lastName}`}</span>\n                  <CloseIcon size='8' onClick={() => handleRemoveMember(mem)} />\n                </div>\n              ))}\n            </div>\n            <AddDropdown\n              text={memberHeader}\n              renderIconLeft={() => <AddPersonOutlinedIcon />}\n              options={members?.data}\n              id='firstName'\n              id2='lastName'\n              headerStyle={{\n                padding: '14px 0',\n                justifyContent: 'flex-start',\n                boxShadow: 'none',\n                marginTop: '10px',\n              }}\n              textStyle={{ marginLeft: '20px' }}\n              handleOption={(item) => handleMembersSelect(item)}\n              nullCheckValue={false}\n              headerRef={memberHeaderRef}\n            />\n          </div>\n          <div className={classes.content}>\n            <div className={classes.labelHeader}>\n              <h3 className={classes.membersText}>Label</h3>\n              {/* <MoreVerticalIcon size='18px' color='#868686' style={{ transform: 'rotate(90)' }} /> */}\n            </div>\n            {projectTypes.map((t) => (\n              <div key={t.id} className={classes.projectType} onClick={() => handleLabelSelect(t)}>\n                <span className={classes.typeText}>{t.type}</span>\n                <UnCheckedIcon\n                  color={\n                    (selectedLabel === t.id || projectLabel.includes(t.type)) &&\n                    projectLabel.length > 0\n                      ? '#003B33'\n                      : ''\n                  }\n                  style={{ border: '1px solid #BDBDBD', borderRadius: '50%' }}\n                  size='14'\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        {/* column2  */}\n        <div className={classes.column}>\n          <div className={classes.content}>\n            {/* <CloseIcon style={{ marginBottom: '18px' }} onClick={handleAddProject} /> */}\n            <div className={classes.membersText}>Create New Task</div> {/* <span>For</span> */}\n            <Input\n              placeholder='Task Title'\n              onChange={(e) => setTaskName(e.target.value)}\n              value={taskName}\n              border={focusTaskName ? '0.8px solid rgba(0, 101, 87, 0.5)' : 'none'}\n              onFocus={() => setFocusTaskName(true)}\n              onBlur={() => setFocusTaskName(false)}\n            />\n            <TextArea\n              placeholder='Describe Task'\n              style={{ marginBottom: '14px' }}\n              value={taskDescription}\n              onChange={(e) => setTaskDescription(e.target.value)}\n            />\n            <span style={{ marginRight: '3px' }} className={classes.managerText}>\n              Due Date:\n            </span>\n            <Input\n              type='date'\n              value={taskDate}\n              onChange={(e) => setTaskDate(e.target.value)}\n              border=''\n            />\n            <div className={classes.selectedMembers}>\n              {assignees?.map((mem: any) => (\n                <div\n                  key={mem._id}\n                  className={classes.ownerMini}\n                  style={{ margin: '10px 10px 0px 0' }}\n                >\n                  <Avatar size='18px' src={mem.profileImage} />\n                  <span\n                    style={{ margin: '0 10px', fontSize: '11px' }}\n                  >{`${mem.firstName} ${mem.lastName}`}</span>\n                  <CloseIcon size='8' onClick={() => handleRemoveAssignee(mem)} />\n                </div>\n              ))}\n            </div>\n            <AddDropdown\n              text={assigneeHeader}\n              renderIconLeft={() => <AddPersonOutlinedIcon />}\n              options={projectMembers}\n              id='firstName'\n              id2='lastName'\n              headerStyle={{\n                padding: '14px 0',\n                justifyContent: 'flex-start',\n                boxShadow: 'none',\n                marginTop: '5px',\n                marginBottom: '10px',\n              }}\n              textStyle={{ marginLeft: '20px' }}\n              dropdownItemsStyle={{ marginTop: '0px' }}\n              handleOption={(item) => handleAssigneeSelect(item)}\n              nullCheckValue={false}\n              errorText={errorText}\n              onHeaderClick={handleAssigneeHeader}\n            />\n            <Button text='Create Task' bgColor='#006557' onClick={handleCreateTask} />\n          </div>\n          <div className={classes.content}>\n            <h3 className={classes.membersText}>All Tasks</h3>\n            <div className={classes.allTasks}>\n              {tasks?.map((task: any) => {\n                return (\n                  <div className={classes.task} key={task.description}>\n                    <div className={classes.assigneeName}>{task.name}</div>\n                    <div className={classes.assigneeName}>{task.date}</div>\n                    <div className={classes.deleteTask} onClick={handleRemoveTask}>\n                      Delete\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          {/* comment snippet */}\n        </div>\n        {/* column3 */}\n        <div className={classes.column}>\n          <div className={classes.content}>\n            <div className={`${classes.membersText} ${classes.attachText}`}>File Attachment</div>\n            <AttachmentsPreview\n              attachments={attachments}\n              onChange={handleFileChange}\n              onDrop={handleDropChange}\n              onDownload={handleDownload}\n              coverImage={projectImage}\n              onDeleteAttachment={handleDeleteAttachment}\n              onDeleteCover={handleDeleteCover}\n              showDownload={false}\n            />\n          </div>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default AddProject;\n"],"names":["members","useAppSelector","state","user","auth","projects","error","projectError","successMessage","loading","loader","dispatch","useAppDispatch","effectRef","useRef","useState","title","setTitle","description","setDescription","projectImage","setProjectImage","date","setDate","projectManager","setProjectManager","projectMemberIds","setProjectMemberIds","projectManagerIds","setProjectManagerIds","projectMembers","setProjectMembers","assigneeIds","setAssigneeIds","projectLabel","setProjectLabel","tasks","setTasks","taskName","setTaskName","taskDate","setTaskDate","attachments","setAttachments","publicProject","setPublicProject","focusTitle","setFocusTitle","focusTaskName","setFocusTaskName","ongoing","setOngoing","navigate","useNavigate","useEffect","current","getMembersAction","pageNumber","limit","projectInfo","errorText","setErrorText","assignees","setAssignees","memberHeader","setMemberHeader","assigneeHeader","setAssigneeHeader","selectedLabel","setSelectedLabel","taskDescription","setTaskDescription","coverPreview","setCoverPreview","memberHeaderRef","clearAllData","handleRemoveTask","item","removedMember","removeArrItem","handleDropChange","useCallback","file","find","name","prev","style","display","justifyContent","text","alignSelf","marginBottom","width","onClick","formData","FormData","append","JSON","stringify","i","length","data","token","accessToken","addProjectAction","then","res","payload","toast","message","stopLoading","status","success","paths","ADMIN","PROJECTS","spinnerSize","disabled","className","classes","container","column","content","padding","placeholder","onChange","e","target","value","border","onFocus","onBlur","boxShadow","size","color","margin","id","files","preview","URL","createObjectURL","type","fileInput","htmlFor","src","alt","marginRight","managerText","alignItems","marginLeft","borderColor","cursor","membersText","selectedMembers","map","mem","ownerMini","profileImage","fontSize","firstName","lastName","removedMemberId","_id","handleRemoveManager","renderIconLeft","renderIconRight","options","id2","headerStyle","handleOption","handleManagerSelect","handleRemoveMember","marginTop","textStyle","includes","handleMembersSelect","nullCheckValue","headerRef","labelHeader","projectTypes","t","projectType","labelsCopy","index","indexOf","splice","handleLabelSelect","typeText","borderRadius","handleRemoveAssignee","dropdownItemsStyle","handleAssigneeSelect","onHeaderClick","focus","bgColor","allTasks","task","assigneeName","deleteTask","attachText","onDrop","onDownload","fileName","link","document","createElement","download","href","click","coverImage","onDeleteAttachment","removedAttachment","onDeleteCover","showDownload"],"sourceRoot":""}