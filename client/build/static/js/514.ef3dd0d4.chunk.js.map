{"version":3,"file":"static/js/514.ef3dd0d4.chunk.js","mappings":"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","sources":["assets/data/regions.ts","components/admin/dropdown/Dropdown.component.tsx","webpack://client/./src/components/admin/settings-sidebar/SettingsSidebar.module.css?d77a","components/admin/settings-sidebar/SettingsSidebar.component.tsx","webpack://client/./src/components/admin/settings-mobile-navs/SettingsMobileNavs.module.css?b856","components/admin/settings-mobile-navs/SettingsMobileNavs.component.tsx","layouts/Settings.layout.tsx","assets/data/timeFormat.ts","assets/data/languages.ts","assets/data/timezones.ts","assets/svg/CircleGreyIcon.tsx","webpack://client/./src/components/admin/timezone/TimeZone.module.css?cb70","components/admin/timezone/TimeZone.component.tsx","webpack://client/./src/pages/admin/settings/Settings.module.css?2619","pages/admin/settings/Settings.page.tsx","webpack://client/./src/components/admin/dropdown/Dropdown.module.css?4b82"],"sourcesContent":["export enum Regions {\n  South_West = 'South West',\n  North_West = 'North West',\n  South = 'South',\n  North = 'North',\n  East = 'East',\n  West = 'West',\n  Far_North = 'Far North',\n  Littoral = 'Littoral',\n  Center = 'Center',\n  Adamawa = 'Adamawa',\n}\nexport const regions = [\n  {\n    id: 0,\n    region: Regions.South_West,\n  },\n  {\n    id: 1,\n    region: Regions.North_West,\n  },\n  {\n    id: 2,\n    region: Regions.South,\n  },\n  {\n    id: 3,\n    region: Regions.North,\n  },\n  {\n    id: 4,\n    region: Regions.East,\n  },\n  {\n    id: 5,\n    region: Regions.West,\n  },\n  {\n    id: 6,\n    region: Regions.Far_North,\n  },\n  {\n    id: 7,\n    region: Regions.Littoral,\n  },\n  {\n    id: 8,\n    region: Regions.Center,\n  },\n  {\n    id: 9,\n    region: Regions.Adamawa,\n  },\n];\n","import { useState } from 'react';\nimport { ArrowDownIcon } from '../../../assets/svg';\nimport { DropdownTypes } from './Dropdown.type';\nimport classes from './Dropdown.module.css';\n\nconst Dropdown = ({\n  label = '',\n  options = [],\n  id = '',\n  style,\n  children,\n  handleOption = () => '',\n  isDropdown = true,\n  initialValue = '',\n  dropItemsStyle\n}: DropdownTypes) => {\n  const [dropdown, setDropdown] = useState(false);\n  const [value, setValue] = useState('');\n  const [color, setColor] = useState('');\n  return (\n    <>\n      {isDropdown ? (\n        <div className={classes.container} style={style}>\n          {label && (\n            <span style={{ marginBottom: '10px', fontWeight: '600', fontSize: '14px' }}>\n              {label}\n            </span>\n          )}\n          <div className={classes.dropdownContainer}>\n            <div\n              className={classes.dropdownHeader}\n              onClick={() => setDropdown(!dropdown)}\n              style={{ color }}\n            >\n              {value || initialValue }\n              <ArrowDownIcon width='10' height='7' color={color} />\n            </div>\n            {dropdown && (\n              <div className={classes.dropdownItems} style={dropItemsStyle}>\n                {options.map((item: any) => (\n                  <div\n                    key={item.id}\n                    className={classes.dropdownItem}\n                    onClick={() => {\n                      setValue(item[id]);\n                      setColor(item.iconColor);\n                      setDropdown(false);\n                      handleOption(item[id]);\n                    }}\n                  >\n                    <span style={{ color: item.iconColor }}>{item[id]}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div className={classes.container} style={style}>\n          {label && (\n            <span style={{ marginBottom: '10px', fontWeight: '600', fontSize: '14px' }}>\n              {label}\n            </span>\n          )}\n          <div className={classes.dropdownContainer}>\n            <div\n              className={classes.dropdownHeader}\n              onClick={() => setDropdown(!dropdown)}\n              style={{ color }}\n            >\n              {value || initialValue}\n              <ArrowDownIcon width='15' height='7' color={color} />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Dropdown;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SettingsSidebar_container__W+SU6\",\"activeItem\":\"SettingsSidebar_activeItem__LvAQF\"};","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { settingsSidebar } from '../../../assets/data/sidebar';\nimport SidebarItem from '../sidebar-item/SidebarItem.component';\nimport classes from './SettingsSidebar.module.css';\n\ninterface sidebarProps {\n  width?: string;\n}\n\nconst SettingsSidebar = ({ width }: sidebarProps) => {\n  const [active, setActive] = useState<string>('General');\n  const navigate = useNavigate();\n  return (\n    <div className={classes.container} style={{ width }}>\n      <div>\n        {settingsSidebar.map((item: any) => (\n          <SidebarItem\n            key={item.id}\n            text={item.title}\n            to={item.path}\n            activeClassName={classes.activeItem}\n            style={{\n              backgroundColor: 'white',\n              borderRadius: ' 25px',\n              display: 'flex',\n              justifyContent: 'center',\n              marginBottom: '18px',\n              padding: '8px 10px',\n              fontWeight: '600',\n            }}\n            fontSize='12px'\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsSidebar;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SettingsMobileNavs_container__u56mH\",\"icon\":\"SettingsMobileNavs_icon__yNUQz\"};","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport SidebarItem from '../sidebar-item/SidebarItem.component'\nimport { settingsSidebar, sidebar } from '../../../assets/data/sidebar'\nimport classes from './SettingsMobileNavs.module.css'\n\ninterface sidebarProps {\n  showSidebar?: boolean\n  onClick?: () => void\n}\n\nconst SettingsMobileNavs = ({ showSidebar, onClick }: sidebarProps) => {\n  const [active, setActive] = useState<string>('')\n  const navigate = useNavigate()\n  return (\n    <>\n      {showSidebar && (\n        <div className={classes.container}>\n          {settingsSidebar.map((item: any) => (\n            <SidebarItem\n              key={item.id}\n              text={item.title}\n              activeClassName={classes.activeItem}\n              style={{\n                backgroundColor: 'white',\n                borderRadius: ' 25px',\n                display: 'flex',\n                marginBottom: '18px',\n                padding: '6px 8px',\n                fontWeight: '600',\n                fontSize: '16px',\n              }}\n              renderIcon={() => (\n                <div className={classes.icon}>\n                  <item.icon color={item.title === active ? '#00262a' : '#929283'} size='24' />\n                </div>\n              )}\n              to={item.path}\n              onClick={onClick}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default SettingsMobileNavs\n","import React, { useState } from 'react';\nimport SettingsSidebar from '../components/admin/settings-sidebar/SettingsSidebar.component';\nimport AdminLayout from './Admin.layout';\nimport { LayoutTypes } from './Layout.type';\nimport SettingsMobileNavs from '../components/admin/settings-mobile-navs/SettingsMobileNavs.component';\nimport classes from './Layout.module.css';\n\nconst SettingsLayout = ({ children, padding = '', inlineWidth = '' }: LayoutTypes) => {\n  const [showSidebar, setShowSidebar] = useState(false);\n  return (\n    <AdminLayout title='Settings' childBackground='#fff' bgColor='#fff'>\n      <div className={classes.container}>\n        <div className={classes.sidebar}>\n          <SettingsSidebar />\n        </div>\n        <div className={classes.content} style={{ padding }}>\n          <div className={classes.childrenContent} style={{ width: inlineWidth }}>\n            {children}\n          </div>\n        </div>\n      </div>\n      <div className={classes.mobileNavs}>\n        <SettingsMobileNavs showSidebar={showSidebar} onClick={() => setShowSidebar(false)} />\n      </div>\n    </AdminLayout>\n  );\n};\n\nexport default SettingsLayout;\n","export enum formatEnum {\n  TWELVE_HOURS = '12 Hours',\n  TWENTYFOUR_HOURS = '24 Hours',\n}\n\nexport const timeFormat = [\n  {\n    id: 0,\n    format: formatEnum.TWENTYFOUR_HOURS,\n  },\n  {\n    id: 1,\n    format: formatEnum.TWELVE_HOURS,\n  },\n]\n","export const languages = [\n  {\n    id: 0,\n    lang: 'English (Default)',\n  },\n  {\n    id: 1,\n    lang: 'French',\n  },\n  {\n    id: 2,\n    lang: 'German',\n  },\n]\n","export const timezones = [\n  {\n    id: 0,\n    timezone: 'GMT+1',\n  },\n  {\n    id: 1,\n    timezone: 'GMT+2',\n  },\n  {\n    id: 2,\n    timezone: 'GMT+3',\n  },\n]\n","import React from 'react'\nimport { svgProps } from './svgProps'\n\nconst CircleGreyIcon = ({ size = '20', style, color = '#F5F5F7' }: svgProps) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox='0 0 20 20'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    style={style}\n  >\n    <circle cx='10' cy='10' r='9' stroke={color} strokeWidth='2' />\n  </svg>\n)\n\nexport default CircleGreyIcon\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TimeZone_container__O0ncy\",\"formatItem\":\"TimeZone_formatItem__2ILOP\",\"formatItemActive\":\"TimeZone_formatItemActive__ia1lI\",\"formats\":\"TimeZone_formats__GTgv9\"};","import { useState } from 'react';\nimport { timeFormat } from '../../../assets/data/timeFormat';\nimport { CircleGreenIcon } from '../../../assets/svg';\nimport CircleGreyIcon from '../../../assets/svg/CircleGreyIcon';\nimport classes from './TimeZone.module.css';\n\ninterface timeZoneTypes {\n  handleOption?: (item: string) => void;\n}\n\nconst TimeZone = ({ handleOption = () => '' }: timeZoneTypes) => {\n  const [active, setActive] = useState<string>('24 Hours');\n  return (\n    <div className={classes.container}>\n      <span style={{ fontWeight: 'bold', marginBottom: '10px', fontSize: '13px' }}>\n        Time Format\n      </span>\n      <div className={classes.formats}>\n        {timeFormat?.map((f: any, index) => (\n          <div\n            className={\n              f.format === active\n                ? `${classes.formatItem} ${classes.formatItemActive}`\n                : `${classes.formatItem}`\n            }\n            style={{ margin: index === 0 ? '0 8px 0 0' : '0 0 0 8px' }}\n            key={f.id}\n            onClick={() => {\n              setActive(f.format);\n              handleOption(f.format);\n            }}\n          >\n            <span style={{ marginRight: '8px' }}>{f.format}</span>\n            {f.format === active ? <CircleGreenIcon size='16' /> : <CircleGreyIcon size='16' />}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TimeZone;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Settings_container__h-5-A\",\"sidebar\":\"Settings_sidebar__ppmVT\",\"content\":\"Settings_content__Zv1Dl\",\"rightButton\":\"Settings_rightButton__W3AQG\",\"leftButton\":\"Settings_leftButton__fQhln\",\"actionButtons\":\"Settings_actionButtons__2O3Ut\"};","import React, { useEffect, useState } from 'react';\nimport { languages } from '../../../assets/data/languages';\nimport { regions } from '../../../assets/data/regions';\nimport { timezones } from '../../../assets/data/timezones';\nimport Button from '../../../components/admin/button/Button.component';\nimport Dropdown from '../../../components/admin/dropdown/Dropdown.component';\nimport TimeZone from '../../../components/admin/timezone/TimeZone.component';\nimport SettingsLayout from '../../../layouts/Settings.layout';\nimport classes from './Settings.module.css';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport {\n  getProfileAction,\n  updateGeneralSettingsAction,\n} from '../../../store/features/slices/members/members.action';\nimport { getLocalRegion, setLocalRegion } from '../../../utils/localStorage';\nimport { formatEnum } from '../../../assets/data/timeFormat';\nimport { toast } from 'react-toastify';\n\nconst Settings = () => {\n  const { user } = useAppSelector((state) => state.auth);\n  const { profile } = useAppSelector((state) => state.members);\n  const dispatch = useAppDispatch();\n\n  const [region, setRegion] = useState<string>(\n    profile?.generalSettings?.region ?? regions[0]?.region,\n  );\n  const [language, setLanguage] = useState<string>(\n    profile?.generalSettings?.language ?? languages[0]?.lang,\n  );\n  const [timezone, setTimezone] = useState<string>(\n    profile?.generalSettings?.timezone ?? timezones[0]?.timezone,\n  );\n  const [timeFormat, setTimeFormat] = useState<string>('' ?? formatEnum.TWELVE_HOURS);\n  useEffect(() => {\n    dispatch(getProfileAction(user?.accessToken));\n  }, []);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleGeneralSettingsUpdate = () => {\n    setLoading(true);\n    const data = {\n      content: {\n        language,\n        timezone,\n        twelveHourFormat: timeFormat === formatEnum.TWELVE_HOURS ? true : false,\n        region,\n      },\n      token: user?.accessToken,\n    };\n    dispatch(updateGeneralSettingsAction(data))\n      .then((res: any) => {\n        const { payload } = res;\n        if (Array.isArray(payload?.errors)) {\n          payload?.errors.forEach((err: any) => {\n            toast.error(err);\n          });\n          return;\n        }\n        toast.success(payload?.message);\n        dispatch(getProfileAction(user?.accessToken));\n      })\n      .catch((err: any) => {\n        toast.error(err?.message);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  return (\n    <SettingsLayout inlineWidth='100%'>\n      <Dropdown\n        options={regions}\n        id='region'\n        label='Region'\n        handleOption={(reg: string) => {\n          setRegion(reg);\n          setLocalRegion(reg);\n        }}\n        initialValue={region ?? profile?.generalSettings?.region ?? regions[0]?.region}\n      />\n      <Dropdown\n        label='Languages'\n        options={languages}\n        id='lang'\n        initialValue={language ?? profile?.generalSettings?.language ?? languages[0]?.lang}\n        handleOption={(reg: string) => {\n          setLanguage(reg);\n        }}\n      />\n      <Dropdown\n        label='Timezone'\n        options={timezones}\n        id='timezone'\n        initialValue={timezone ?? profile?.generalSettings?.timezone ?? timezones[0]?.timezone}\n        handleOption={(reg: string) => {\n          setTimezone(reg);\n        }}\n      />\n      <TimeZone\n        handleOption={(reg: string) => {\n          setTimeFormat(reg);\n        }}\n      />\n      <div className={classes.actionButtons}>\n        <div className={classes.leftButton}>\n          <Button\n            text='Save'\n            bgColor='#003B33'\n            color='#fff'\n            width='100%'\n            onClick={handleGeneralSettingsUpdate}\n            loading={loading}\n          />\n        </div>\n        <div className={classes.rightButton}>\n          <Button\n            text='Cancel'\n            border='1px solid #00262A'\n            color='#00262A'\n            width='100%'\n            bgColor='#fff'\n          />\n        </div>\n      </div>\n    </SettingsLayout>\n  );\n};\n\nexport default Settings;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Dropdown_container__hGUZ1\",\"dropdownContainer\":\"Dropdown_dropdownContainer__k3HvQ\",\"dropdownItems\":\"Dropdown_dropdownItems__mvUaw\",\"dropdownItem\":\"Dropdown_dropdownItem__2F6ru\",\"dropdownHeader\":\"Dropdown_dropdownHeader__HwKyp\"};"],"names":["Regions","regions","id","region","South_West","North_West","South","North","East","West","Far_North","Littoral","Center","Adamawa","label","options","style","children","handleOption","isDropdown","initialValue","dropItemsStyle","useState","dropdown","setDropdown","value","setValue","color","setColor","className","classes","container","marginBottom","fontWeight","fontSize","dropdownContainer","dropdownHeader","onClick","width","height","dropdownItems","map","item","dropdownItem","iconColor","useNavigate","settingsSidebar","text","title","to","path","activeClassName","backgroundColor","borderRadius","display","justifyContent","padding","showSidebar","active","activeItem","renderIcon","icon","size","inlineWidth","setShowSidebar","childBackground","bgColor","sidebar","content","childrenContent","mobileNavs","formatEnum","languages","lang","timezones","timezone","timeFormat","format","TWENTYFOUR_HOURS","TWELVE_HOURS","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","setActive","f","index","margin","marginRight","user","useAppSelector","state","auth","profile","members","dispatch","useAppDispatch","generalSettings","setRegion","language","setLanguage","setTimezone","setTimeFormat","useEffect","getProfileAction","accessToken","loading","setLoading","reg","setLocalRegion","data","twelveHourFormat","token","updateGeneralSettingsAction","then","res","payload","Array","isArray","errors","forEach","err","toast","error","success","message","catch","finally","border"],"sourceRoot":""}