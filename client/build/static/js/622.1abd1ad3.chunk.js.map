{"version":3,"file":"static/js/622.1abd1ad3.chunk.js","mappings":"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","sources":["webpack://client/./src/components/admin/avatar/Avatar.module.css?ee5a","components/admin/avatar/Avatar.component.tsx","webpack://client/./src/components/block/auth/authinfo/authinfo.module.css?e2da","components/block/auth/authinfo/AuthInfo.tsx","components/layout/authlayout/AuthLayout.tsx","webpack://client/./src/components/layout/authlayout/authlayout.module.css?f91d","webpack://client/./src/components/shared/navbar/navbar.module.css?444b","components/shared/navbar/NavBar.tsx","lib/hooks/ScrollView.ts","../node_modules/src/index.tsx","pages/auth/verification/Verification.tsx","webpack://client/./src/components/block/auth/signup/signupcontent.module.css?cd99","webpack://client/./src/pages/auth/authstyles.module.css?0a40"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Avatar_container__DG6ev\",\"content\":\"Avatar_content__ziY9c\"};","import pic from '../../../assets/images/placeholer.png';\nimport { avatarTypes } from './Avatar.type';\nimport classes from './Avatar.module.css';\n\nconst Avatar = ({\n  src,\n  onClick,\n  bgColor = '',\n  padding = '2px',\n  margin,\n  border,\n  size = '32px',\n  borderRadius = '50%',\n  style,\n  imageStyle,\n  id,\n  ...props\n}: avatarTypes) => {\n  return (\n    <div className={classes.container} {...props} id={id}>\n      <div\n        className={classes.content}\n        style={{\n          backgroundColor: bgColor,\n          padding: padding,\n          width: size,\n          height: size,\n          borderRadius,\n          border: border,\n          margin: margin,\n          ...style,\n        }}\n        onClick={onClick}\n      >\n        <img\n          src={src ?? pic}\n          alt='profile'\n          style={{\n            objectFit: 'cover',\n            objectPosition: 'top',\n            width: '100%',\n            height: '100%',\n            borderRadius: borderRadius,\n            ...imageStyle,\n          }}\n          crossOrigin='anonymous'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Avatar;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth__info\":\"authinfo_auth__info__jHFpS\",\"flexDis\":\"authinfo_flexDis__JKMHb\",\"animate\":\"authinfo_animate__11nkm\",\"anima\":\"authinfo_anima__h-pxq\",\"logo\":\"authinfo_logo__lH2kE\",\"instructions\":\"authinfo_instructions__Jks0P\",\"btn\":\"authinfo_btn__z60an\"};","import React, { useEffect, useState } from 'react';\nimport Logo from '../../../../icons/Logo';\n\nimport styles from './authinfo.module.css';\nimport stylesS from '../signup/signupcontent.module.css';\nimport Button from '../../../admin/button/Button.component';\n\ntype Props = {\n  heading: string;\n  description: string;\n  btnText: string;\n  link: string;\n  animate?: boolean;\n  onClick?: (str: string) => void;\n};\n\nconst AuthInfo: React.FC<Props> = ({ heading, description, btnText, link, animate, onClick }) => {\n  const [animateBlock, setAnimateBlock] = useState(false);\n\n  useEffect(() => {\n    setAnimateBlock(true);\n  }, [animate]);\n\n  useEffect(() => {\n    if (animateBlock) {\n      setTimeout(() => {\n        setAnimateBlock(false);\n      }, 1000);\n    }\n  }, [animateBlock]);\n\n  return (\n    <div className={`${styles.auth__info} ${animateBlock ? styles.animate : ''}`}>\n      <div className={`${styles.flexDis}`}>\n        <div className={styles.logo}>\n          <Logo width={100} height={100} />\n        </div>\n        <h3 className={stylesS.head}>{heading}</h3>\n        <p className={styles.instructions}>{description}</p>\n      </div>\n      <div onClick={() => onClick?.(link)}>\n        <Button\n          text={btnText}\n          padding='13px 20px'\n          style={{ border: '1px solid #fff', marginTop: '14rem' }}\n          bgColor='transparent'\n          color='#fff'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AuthInfo;\n","import React from 'react';\n\nimport styles from './authlayout.module.css';\n\nexport const enum Directions {\n  left = 'LEFT',\n  right = 'RIGHT',\n}\n\ntype Props = {\n  dir: Directions;\n  children: React.ReactNode[];\n  animate?: boolean;\n  formContainerPadding?: string\n};\n\nconst AuthLayout: React.FC<Props> = ({ dir, animate, children, formContainerPadding='' }) => {\n  return (\n    <div\n      className={`${styles.auth__layout} ${\n        animate !== undefined && animate ? styles.animate : ''\n      } ${dir === Directions.left ? styles.left : ''}`}\n    >\n      <div className={styles.form__container} style={{ padding: formContainerPadding }}>{children[0]}</div>\n      <div className={`${styles.info__container}`}>{children[1]}</div>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","// extracted by mini-css-extract-plugin\nexport default {\"auth__layout\":\"authlayout_auth__layout__9-yeD\",\"left\":\"authlayout_left__z3YLa\",\"form__container\":\"authlayout_form__container__hgAar\",\"animate\":\"authlayout_animate__1Ncop\",\"info__container\":\"authlayout_info__container__lmrU0\"};","// extracted by mini-css-extract-plugin\nexport default {\"main__container\":\"navbar_main__container__m5eVW\",\"shadow\":\"navbar_shadow__mz+0R\",\"nav__content\":\"navbar_nav__content__i+nwf\",\"navlinks\":\"navbar_navlinks__RhZDZ\",\"activeLink\":\"navbar_activeLink__XmgtE\",\"nav_links\":\"navbar_nav_links__RVltM\",\"btn__arrow\":\"navbar_btn__arrow__tOp10\",\"btn__signin\":\"navbar_btn__signin__J3Dsj\",\"user__profile\":\"navbar_user__profile__wTn1p\"};","import React, { useEffect, useRef, useState } from 'react';\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\nimport Arrow from '../../../icons/Arrow';\n\nimport Logo from '../../../icons/Logo';\nimport { UseScrollPosition } from '../../../lib/hooks/ScrollView';\nimport { navlinks, paths } from '../../../routers/paths';\n// import Button from '../button/Button';\n\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport Avatar from '../../admin/avatar/Avatar.component';\nimport placeholder from '../../../assets/images/placeholer.png';\nimport styles from './navbar.module.css';\nimport Button from '../../admin/button/Button.component';\nimport { ArrowRightIcon, ChevronRightIcon } from '../../../assets/svg';\nimport { toast } from 'react-toastify';\nimport { persistor } from '../../..';\n\nconst NavBar = () => {\n  const { user } = useAppSelector((state) => state.auth);\n  const { profile } = useAppSelector((state) => state.members);\n\n  const ref = useRef(toast);\n  const pos = UseScrollPosition();\n  const navigate = useNavigate();\n\n  const handleAuth = () => {\n    navigate(paths.AUTH);\n  };\n  const handleDashboardNavigate = () => {\n    if (user?.user?.isMember === false) {\n      ref.current.warning('Not a Member 🚫, Get Approved by Admin first');\n      return;\n    }\n    navigate(paths.ADMIN.DASHBOARD);\n  };\n\n  return (\n    <div className={`${styles.main__container} ${pos > 100 ? styles.shadow : ''}`}>\n      <div>\n        <Link to='/'>\n          <Logo style={{ width: '40' }} />\n        </Link>\n      </div>\n      <div className={styles.nav__content}>\n        <div className={styles.navlinks}>\n          {navlinks.map((link) => (\n            <NavLink\n              className={({ isActive }) =>\n                isActive ? `${styles.nav_links} ${styles.activeLink}` : `${styles.nav_links}`\n              }\n              key={link.path}\n              to={link.path}\n            >\n              {link.label}\n            </NavLink>\n          ))}\n        </div>\n        {user?.accessToken ? (\n          <div className={styles.user__profile}>\n            <Avatar\n              size='32px'\n              src={profile?.profileImage?.httpPath ?? placeholder}\n              onClick={handleDashboardNavigate}\n              border='1px solid #005259'\n            />\n          </div>\n        ) : (\n          <>\n            <Link to='/auth?tab=signup' style={{ textDecoration: 'none' }}>\n              <Button\n                text='Join Our Community'\n                style={{ marginRight: '15px', border: '1px solid #005259' }}\n                renderIcon={() => (\n                  <ArrowRightIcon style={{ width: '14', height: '12', marginLeft: '5px' }} />\n                )}\n                iconAfter\n                padding='13px 20px'\n              />\n            </Link>\n            <Button\n              text='Sign In'\n              onClick={handleAuth}\n              padding='13px 20px'\n              style={{ border: '1px solid #005259' }}\n              bgColor='transparent'\n              color='#005259'\n            />\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import { useEffect, useState } from 'react'\n\nexport const UseScrollPosition = () => {\n  // initially we have the scroll position of the entire window set unto 0\n  const [scrollPosition, setScrollPosition] = useState(0)\n\n  useEffect(() => {\n    const updatePosition = () => {\n      setScrollPosition(window.pageYOffset)\n    }\n\n    // update the scroll position upon scrolling\n    window.addEventListener('scroll', updatePosition)\n\n    updatePosition()\n\n    // clean-up function\n    return () => window.removeEventListener('scroll', updatePosition)\n  }, [])\n\n  return scrollPosition\n}\n","import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'maxLength'\n    | 'autoComplete'\n    | 'style'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    } else {\n      const { nativeEvent } = event;\n      // @ts-expect-error - This was added previosly to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    } else if (isInputNum && !isInputValueValid(event.key)) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              maxLength: 1,\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                { width: '1em', textAlign: 'center' } as const,\n                isStyleObject(inputStyle) && inputStyle\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default OTPInput;\n","import React, { useState } from 'react';\nimport OtpInput from 'react-otp-input';\nimport { toast } from 'react-toastify';\nimport AuthInfo from '../../../components/block/auth/authinfo/AuthInfo';\nimport AuthLayout, { Directions } from '../../../components/layout/authlayout/AuthLayout';\n\nimport NavBar from '../../../components/shared/navbar/NavBar';\n\nimport { EmailLogo } from '../../../assets/svg';\nimport { useAppDispatch, useAppSelector } from '../../../store';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  loginUserAction,\n  resendVerificationCodeAction,\n  verifyAccountAction,\n} from '../../../store/features/slices/auth/auth.action';\nimport { paths } from '../../../routers/paths';\nimport { getLocalPass, getLocalEmail } from '../../../utils/localStorage';\nimport styles from '../authstyles.module.css';\nimport Button from '../../../components/admin/button/Button.component';\n\nconst Verification = () => {\n  const [otp, setOtp] = useState('');\n\n  const { loading } = useAppSelector((state) => state.loader);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const localPass = getLocalPass();\n  const localEmail = getLocalEmail();\n\n  const [timer, setTimer] = React.useState(60);\n  const id = React.useRef<any>(null);\n\n  const clear = () => {\n    window.clearInterval(id.current);\n  };\n  React.useEffect(() => {\n    id.current = window.setInterval(() => {\n      setTimer((time) => time - 1);\n    }, 1000);\n    return () => clear();\n  }, []);\n\n  React.useEffect(() => {\n    if (timer === 0) {\n      clear();\n    }\n  }, [timer]);\n\n  const navigateData = (payload: any) => {\n    const message = payload?.message;\n    switch (payload.status) {\n      case 400:\n        toast.error(payload?.message);\n        navigate(paths.VERIFICATION);\n        break;\n      case 400 && message === 'Wrong credentials given':\n        toast.error(payload?.message);\n        navigate(paths.AUTH);\n        break;\n      case 404:\n        toast.error(payload?.message);\n        break;\n      default:\n        navigate(paths.HOME);\n    }\n  };\n\n  const handleVerifyAccount = () => {\n    const data = { email: localEmail, otp };\n    if (otp) {\n      dispatch(verifyAccountAction(data))\n        .then((res) => {\n          const { payload } = res;\n          if (payload.status === 400) {\n            toast.error(payload?.message);\n            return;\n          } else {\n            const loginData: any = { email: localEmail?.trim(), password: localPass?.trim() };\n            dispatch(loginUserAction(loginData))\n              .then((res) => {\n                const { payload } = res;\n                navigateData(payload);\n              })\n              .catch((err) => {\n                toast.error(err?.message);\n                return;\n              });\n            navigate(paths.AUTH);\n          }\n        })\n        .catch((err) => {\n          toast.error(err?.message);\n          return;\n        });\n    } else {\n      toast.error('Please enter the verification code');\n    }\n  };\n\n  const handleResend = () => {\n    dispatch(resendVerificationCodeAction(localEmail))\n      .then((res) => {\n        const { payload } = res;\n        if (payload.status === 404) {\n          toast.error(payload?.message);\n          return;\n        } else {\n          toast.success(payload?.message);\n          return;\n        }\n      })\n      .catch((err) => {\n        toast.error(err?.message);\n        return;\n      });\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div style={{ height: '95px', background: 'white' }}></div>\n      <div className={styles.auth__container}>\n        <AuthLayout dir={Directions.right}>\n          <>\n            <div className={styles.container}>\n              <EmailLogo />\n              <h2 className={styles.header}>Verify Account</h2>\n              <p className={styles.caption}>\n                Enter the 6 digit code we sent to your email address to verify your new account\n              </p>\n              <OtpInput\n                value={otp}\n                onChange={setOtp}\n                numInputs={6}\n                renderInput={(props) => <input {...props} className={styles.otpInput} />}\n                containerStyle={{ margin: '3rem 0' }}\n              />\n              <div className={styles.expiration}>\n                <p>\n                  Code expires in: <span style={{ color: 'red', fontWeight: 'bold' }}>{timer}</span>\n                </p>\n              </div>\n              <Button\n                text='Verify & Continue'\n                textStyle={{ fontSize: '13px' }}\n                margin='7rem 0 0'\n                padding='15px'\n                onClick={handleVerifyAccount}\n                loading={loading}\n              />\n              <span className={styles.noCode}>\n                Didn’t get the code?{' '}\n                <span style={{ color: '#004C41', cursor: 'pointer' }} onClick={handleResend}>\n                  Resend Code\n                </span>\n              </span>\n            </div>\n          </>\n          <AuthInfo\n            heading='Hello there!'\n            description='Enter your personal info and start a journey with us.'\n            btnText='Sign up'\n            link={paths.AUTHSIGNUP}\n            onClick={() => navigate(-1)}\n          />\n        </AuthLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default Verification;\n","// extracted by mini-css-extract-plugin\nexport default {\"left\":\"signupcontent_left__rEI0U\",\"head\":\"signupcontent_head__SDbPS\",\"animate\":\"signupcontent_animate__OVI0W\",\"icons\":\"signupcontent_icons__Nb4W8\",\"forgot__password\":\"signupcontent_forgot__password__HWYye\",\"btn1\":\"signupcontent_btn1__c+RJa\"};","// extracted by mini-css-extract-plugin\nexport default {\"auth__container\":\"authstyles_auth__container__2YAHv\",\"container\":\"authstyles_container__O6tAA\",\"header\":\"authstyles_header__L3gHN\",\"caption\":\"authstyles_caption__d8wvE\",\"expiration\":\"authstyles_expiration__SABue\",\"noCode\":\"authstyles_noCode__KPW61\",\"otpInput\":\"authstyles_otpInput__e64j5\"};"],"names":["src","onClick","bgColor","padding","margin","border","size","borderRadius","style","imageStyle","id","props","className","classes","backgroundColor","width","height","pic","alt","objectFit","objectPosition","crossOrigin","heading","description","btnText","link","animate","useState","animateBlock","setAnimateBlock","useEffect","setTimeout","styles","Logo","stylesS","head","text","marginTop","color","Directions","dir","children","formContainerPadding","undefined","left","user","useAppSelector","state","auth","profile","members","ref","useRef","toast","pos","UseScrollPosition","navigate","useNavigate","to","navlinks","map","isActive","path","label","accessToken","profileImage","httpPath","placeholder","isMember","paths","ADMIN","DASHBOARD","current","warning","textDecoration","marginRight","renderIcon","marginLeft","iconAfter","AUTH","scrollPosition","setScrollPosition","updatePosition","window","pageYOffset","addEventListener","removeEventListener","isStyleObject","obj","OTPInput","_a","value","_c","numInputs","onChange","renderInput","_d","shouldAutoFocus","_e","inputType","renderSeparator","containerStyle","inputStyle","activeInput","setActiveInput","inputRefs","React","getOTPValue","toString","split","isInputNum","slice","focus","getPlaceholderValue","length","console","error","isInputValueValid","isNaN","Number","trim","handleChange","event","target","changeCodeAtFocus","focusInput","nativeEvent","data","preventDefault","handleBlur","handleKeyDown","otp","code","key","includes","index","Math","max","min","select","handleOTPChange","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","some","shift","Object","assign","display","alignItems","Array","from","_","element","onFocus","handleFocus","onBlur","onKeyDown","onPaste","autoComplete","maxLength","textAlign","type","setOtp","loading","loader","dispatch","useAppDispatch","localPass","getLocalPass","localEmail","getLocalEmail","timer","setTimer","clear","clearInterval","setInterval","time","NavBar","background","auth__container","AuthLayout","right","container","header","caption","otpInput","expiration","fontWeight","textStyle","fontSize","email","verifyAccountAction","then","res","payload","status","loginData","password","loginUserAction","message","VERIFICATION","HOME","navigateData","catch","err","noCode","cursor","resendVerificationCodeAction","success","AuthInfo","AUTHSIGNUP"],"sourceRoot":""}